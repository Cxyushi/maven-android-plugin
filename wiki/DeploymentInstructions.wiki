#summary Instructions for deployment.
#labels Phase-Deploy

= Introduction =

This should be of no interest to developers of Android applications. This is for those developers of the Android Maven Plugin who perform releases of the plugin.


= Setup environment =

== Building environment ==

Set up the normal coding environment according to instructions on the [Building] page.

== m2site via svn ==

Checkout the m2site as described in its checkout instructions (for project members):
  
  * http://code.google.com/p/maven-android-plugin-m2site/source/checkout
  
For simplicity, the rest of this page will assume you have checked it out to your home directory, {{{~}}}.

== More environment variables ==

Apart from the environment variable(s) you set up in [Building], you also need to set up this:

  {{{
  export MAVEN_ANDROID_PLUGIN_M2SITE_SVN_WORKINGCOPY=file://$HOME/maven-android-plugin-m2site
  }}}

== Configure subversion ==
To automatically set correct mime-types on anything you {{{svn add}}}, put this in your {{{~/.subversion/config}}}:

  {{{
  enable-auto-props = yes
  [auto-props]
  *.txt = svn:mime-type=text/plain
  *.html = svn:mime-type=text/html
  *.css = svn:mime-type=text/css
  *.png = svn:mime-type=image/png
  *.jpg = svn:mime-type=image/jpeg
  *.jpeg = svn:mime-type=image/jpeg
  *.gif = svn:mime-type=image/gif
  *.js = svn:mime-type=application/javascript
  }}}

== GPG ==

In Ubuntu, you should use Seahorse ({{{sudo aptitude install seahorse}}}). It makes these things easier. I think
it includes the required gpg-agent too.

  * Make sure you have a gpg key. Maven Central requires it.
    * Here are some instructions: http://maven.apache.org/developers/release/pmc-gpg-keys.html
    * You should upload it to http://pgp.mit.edu/
  * Run some kind of gpg-agent. Our {{{pom.xml}}} requires it.
  * If you need to migrate keys look at http://irtfweb.ifa.hawaii.edu/~lockhart/gpg/gpg-cs.html

When using gpg2 you will need to tell the Maven GPG Plugin that the executable is gpg2. Do this by passing the -Dgpg.executable=gpg2 on the command line invocation of your Maven build command.
If you don't want to be asked the password for your GPG key during the build you can use -Dgpg.passphrase="supersecretpassword", but be careful .. this will be saved in your history file .. 

== Settings.xml ==

In order for Maven to use your credentials to access the deployment repositories (for which you have to ask Hugo for permission) you have to add them to your ~/.m2/settings.xml file. It should look like this

{{{
		<!-- jayway servers for Android Maven Plugin -->
		<server>
			<id>oss.sonatype.org-jayway-staging</id>
			<username>yourname</username>
			<password>yourpassword</password>
		</server>
		<server>
			<id>oss.sonatype.org-jayway-snapshots</id>
			<username>yourname</username>
			<password>yourpassword</password>
		</server>

}}}
with the respective username and password.

= Are you okay to release and deploy? =

In order to be deployed the builds on the CI server for the plugin and the samples should pass! If that is not the case.. fix that first. 

Once that is ok also try building the site locally with

{{{
mvn clean install site
}}}

and if that fails, get it to work too ;-)
  
= Deploy a SNAPSHOT version =

If you want to make available a binary version of Android Maven Plugin for someone to test, before making a proper release, deploy a SNAPSHOT version.

Don't worry, it will sit in a separate directory structure from the proper releases. It won't end up on Maven Central.

== Do it! ==

To perform the SNAPSHOT release:

  {{{
  cd ~/maven-android-plugin
  mvn clean deploy -P official-release
  }}}

That should deploy the artifacts directly to our SNAPSHOT repo on [http://oss.sonatype.org]. Daring users can follow instructions in [SnapshotRepo] to access them.


= Perform a RELEASE =

This is the real deal. A release will be synced to Maven Central after a few hours, and then there is NO way to have it removed. Make sure it passes all tests!

== Check the m2site ==
Check the status of your m2site workingcopy. It should show nothing:

  {{{
  cd $MAVEN_ANDROID_PLUGIN_M2SITE_SVN_WORKINGCOPY
  svn st
  svn up
  }}}

If not, delete it and check it out according to the setup instructions above.

== Do it! ==

To perform the release:

  {{{
  cd ~/maven-android-plugin
  mvn clean && mvn install && MAVEN_OPTS='-Xmx256m' mvn release:prepare release:perform
  }}}

That should perform the entire release, including deploying the site into {{{~/maven-android-plugin-m2site/}}} and deploying the plugin to our staging repo at [http://oss.sonatype.org/].

Now you need to promote the staged release, for it to be moved to the release repo where it's synced to Central from.

  #. Browse to [http://oss.sonatype.org/] and log in.
  #. Click "Staging Repositories".
  #. Select the repo and choose "Close".
  #. Then choose "Relese" for the same repo.
  #. If prompted for where to release it, choose "Jayway Releases".

== Upload the m2site ==
Check if there is anything you need to {{{svn add}}}:

  {{{
  cd ~/maven-android-plugin-m2site
  svn st
  }}}

...and possibly add whatever is not added yet, for example:

  {{{
  svn add *
  }}}

...or to automatically add all non-added files:

  {{{
  svn st | grep '^\?' | sed -r 's/^\? +//' | xargs svn add
  }}}

Go ahead and commit the updated site.

  {{{
  svn ci -m 'Generated maven site for android-maven-plugin 3.0.0-alpha-11.'
  }}}

Mime-types should hopefully be correct. Check at http://maven-android-plugin-m2site.googlecode.com/svn/index.html


== Update samples  ==

Check out the master branch and change all version strings for the android maven plugin to use the new SNAPSHOT version. Build, commit and push to origin master.

WAIT UNTIL THE RELEASE IS SYNCED TO CENTRAL

Check here http://repo1.maven.org/maven2/com/jayway/maven/plugins/android/generation2/android-maven-plugin/

Check out the stable branch, pull up from the master branch in case there are any changes and change all the version strings for the android maven plugin to use the new released version. Build, commit and push to origin stable.



== Update Changelog ==

Update [Changelog] with all interesting information about the plugin release, such as:

  * Fixed Issues - link to them.
  * New features - link to any related Issues.
  * Any changes that break backwards compatibility - tell users exactly what they must do to upgrade their projects.

== Announce ==

Announce on [http://groups.google.com/group/maven-android-developers Maven Android Developers]
and ideally also on the [http://maven.apache.org/mail-lists.html Maven developers and users mailing lists] 