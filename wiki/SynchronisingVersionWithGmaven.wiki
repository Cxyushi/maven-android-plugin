#summary How to get the version set in the pom.xml file into the AndroidManifest.xml

= Introduction =

If you want to automate your release process with Maven you will want to have the version managed by Maven and any changes should be reflected in the Android manifest file.

= Details =

In order to achieve this you can use a bit of groovy code in your pom.xml file using the gmaven plugin in your <build><plugins> section.

  <plugin>
            	<!-- Sets the AndroidManifest.xml Version Name to the projects version number -->
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                project.modules.each {
                                    try {
                                        def manifestFile = new File("${it}/AndroidManifest.xml")
                                        def ns = new groovy.xml.Namespace(
                                            "http://schemas.android.com/apk/res/android", "ns")
                                        def parser = new groovy.util.XmlParser(false, true)
                                        def rootNode = parser.parse(manifestFile)
                                        def attributes = rootNode.attributes()
                                        attributes[ns.versionName] = "${project.version}"
                                        def writer = new groovy.io.GroovyPrintWriter(manifestFile)
                                        writer.println('&lt;?xml version="1.0" encoding="UTF-8"?&gt;')
                                        def xmlWriter = new groovy.util.XmlNodePrinter(writer)
                                        xmlWriter.setPreserveWhitespace(false)
                                        xmlWriter.setNamespaceAware(true)
                                        xmlWriter.print(rootNode)
                                    } catch (FileNotFoundException e)
                                    {
                                        println('No AndroidManifest.xml file found. Skipping version update.')
                                        println('Probably not an Android project, but a library.')
                                        println('Skipping version update.')
                                    }
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

= Footnote =

You can also achieve this in a different manner using resource filtering and the build helper plugin. (PS: This is currently being implemented in the mosabua clone of the samples project..)