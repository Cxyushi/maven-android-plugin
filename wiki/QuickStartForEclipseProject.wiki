#summary How to quickly get up and running with Maven build automation for an already existing Eclipse project.

= Automating Android builds with Maven =

Below are the steps required to get up and running with the Maven Android plugin for an already existing Eclipse project. It will cause minimal disruption for team members that already use Eclipse and are happy with this.

Prerequisites are a working [http://maven.apache.org Maven 2.2.1] installation, and the [http://developer.android.com/sdk/index.html Android SDK].

The first step is to set up the environment. For Unix based systems (Linux, OS X, Solaris) use the following command:
{{{
export ANDROID_HOME=/path/to/android/sdk
}}}

For Windows this is done by adding an environment variable in the advanced section of the system properties.

It is important that this point to the root of the SDK and not to one of the platforms within. This document will refer to this variable as ANDROID_HOME instead of ANDROID_SDK_15 being used in most other documentation in the wiki.

To enable your Android project to be built with Maven you need to add a pom looking like this to the project root:
{{{
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.yourcompany</groupId>
    <artifactId>your-artifact-id</artifactId>
    <packaging>apk</packaging>
    <version>0.0.1</version>
    <name>Your Android project Maven Enabled</name>
	
    <dependencies>
        <dependency>
            <groupId>android</groupId>
            <artifactId>android</artifactId>
            <version>1.6<version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.jayway.maven.plugins.android.generation2</groupId>
                <artifactId>maven-android-plugin</artifactId>
                <configuration>
                    <sdk>
                        <path>${env.ANDROID_HOME}</path>
                        <platform>1.6</platform>
                    </sdk>
                    <deleteConflictingFiles>true</deleteConflictingFiles>
                </configuration>
                <extensions>true</extensions>
            </plugin>
        </plugins>
    </build>

</project>
}}}

In order for Maven to find the android.jar file specified as a dependency in the pom it has to be installed into the local repository. Use the command below:
{{{
mvn install:install-file -DgroupId=android -DartifactId=android -Dversion=1.6 -Dpackaging=jar -Dfile=$ANDROID_HOME/platforms/android-1.6/android.jar
}}}
_Replace $ANDROID_HOME with %ANDROID_HOME% on Windows systems._<br/>
This will set up you project to compile against Android 1.6. If your project is built against 1.5 or 2.0 you just replace the references to 1.6 with your preferred version.