#summary Android Library Project with apklib packaging type
#labels HowTo,APKLIB

= Introduction =


*apklib is DEPRECATED* - please use AAR libraries now that Android supports them.



An Android Library Project is a project intended for inclusion in other Android applications, rather than being run on its own. It is documented more in detail in the official Android developers guide:
 * [http://developer.android.com/guide/developing/projects/projects-cmdline.html#SettingUpLibraryProject Android Library Projects on command line]
 * [http://developer.android.com/guide/developing/projects/projects-eclipse.html#SettingUpLibraryProject Android Library Projects in Eclipse]

This deprecates ApkSourcesDependency.

Note that the apklib will include content of the  `…/src/main/java` source directory, the `…/libs` native library directory and `…/res` resource directory. They will *not* contain and not the compiled *.class* files. Depending on your needs using a plain old jar package might be the simpler solution.

= Creating an apklib to use in your project =

An apklib is simply an Android library project, compressed as a zip file with a .apklib extension.

It is important however, that the library contents are at the top level of the zip, i.e.

{{{
+ AndroidGridViewCompatLib.apklib
  + src
  + res
  + AndroidManifest.xml
  + project.properties
}}}

Once you have created your apklib you can add it your local Maven repository:

{{{
mvn install:install-file \
    -Dfile=libs/AndroidGridViewCompatLib-75fd1df.apklib \
    -DgroupId=com.rokoder \
    -DartifactId=gridviewcompat \
    -Dversion=75fd1df \
    -Dpackaging=apklib
}}}

And include it in your pom.xml as normal:

{{{
   <dependency> 
       <groupId>com.rokoder</groupId> 
       <artifactId>gridviewcompat</artifactId> 
       <version>75fd1df</version> 
       <type>apklib</type> 
   </dependency>
}}}

= Help test this =

Support for Android library projects in Android Maven Plugin was our number 1 most starred issue (Issue 96) for a long time. There is support for it from version 2.9.0-beta-1 and onwards.

Please try it out:

{{{
<plugin>
    <groupId>com.jayway.maven.plugins.android.generation2</groupId>
    <artifactId>android-maven-plugin</artifactId>
    <version>3.0.0</version>
</plugin>

}}}
_(Check the [Changelog] for current version, in case this wiki page is left behind...)_

File any issues in the [http://code.google.com/p/maven-android-plugin/issues/list issue tracker].

== Compatible with non-Maven Android Library Projects! ==

The generated {{{.apklib}}} file will have the layout of a standard Android/Eclipse library project. This means that regardless of your Maven layout, the layout inside the {{{.apklib}}} file will be that source code is in "src/" instead of "src/main/java/", but still interpreted correctly when used in an Android/Maven application project. This is to be compatible with non-Maven developers' library projects, which is important to grow the Android developer community.

=== Use other non-Maven developers' libraries ===

It also means we can take any external Android library project zip file (from non-Maven developers) and do {{{mvn install:install-file ...}}} on it and simply start using it as a dependency.

=== Share your {{{.apklib}}} with non-Maven developers ===

To share your {{{.apklib}}} file with a non-Maven developer, they will probably feel more comfortable if you rename it to {{{.zip}}}. They can then simply unpack it in a directory and use it from there.