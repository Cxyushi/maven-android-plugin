#summary Get started using Maven Android Plugin
#labels Featured

= Getting Started =

== Maven Repository ==

  * *Update:* We deploy to Maven Central, so you don't need any repository configuration!


== Setup your development environment ==
  # Install Sun JDK 1.5+
  # Install Android SDK 1.5_r2:
     http://developer.android.com/sdk/1.5_r2/
  # Set environment variable ANDROID_SDK_15 to the path of your installed Android SDK.
  # If you look in the pom.xml of the samples project you will find the following dependency.

{{{
  <dependency>
    <groupId>android</groupId>
    <artifactId>android</artifactId>
    <version>1.5_r2</version>
    <scope>provided</scope>
  </dependency>
}}}

  This corresponds to the android.jar file in the Android SDK which is needed to compile all Android applications. Deploy this file to you local repository with the following command.

    {{{ mvn install:install-file -DgroupId=android -DartifactId=android -Dversion=1.5_r2 -Dpackaging=jar -Dfile=$ANDROID_SDK_15/platforms/android-1.5/android.jar}}}

On Windows, that would be:

    {{{ mvn install:install-file -DgroupId=android -DartifactId=android -Dversion=1.5_r2 -Dpackaging=jar -Dfile=%ANDROID_SDK_15%/platforms/android-1.5/android.jar}}}


== Test your development environment ==

Download the [Samples], as described on the [Samples] page.

Try building the mavenized apidemos sample:

 # {{{cd apidemos-15}}}
 # Connect an Android device via USB, or start an emulator.
 # {{{mvn install}}}

That should build an apk for the {{{apidemos-15-app}}} sub project and then an apk for the {{{apidemos-15-instrumentationtest}}} sub project. As part of the {{{apidemos-15-instrumentationtest}}}, it will deploy both apk files to the connected device or emulator and run the instrumentation tests.


== Create your own Android application (apk) ==
  # Create a project using the {{{android}}} tool:
     * http://developer.android.com/guide/developing/other-ide.html#CreatingAProject
  # Create a {{{pom.xml}}} in your project, using the sample {{{apidemos-15/apidemos-15-app/pom.xml}}} as template.
     * Make these changes:
     * Remove the entire {{{<parent>}}} tag.
     * Change {{{<groupId>}}}, {{{<artifactId>}}} and {{{<name>}}} to your own.
     * Change {{{<version>}}} to {{{0.1.0-SNAPSHOT}}} or some other {{{-SNAPSHOT}}} version you feel is appropriate for your project.
  # Move the source directory to where Maven expects it:
     {{{
     mv src java
     mkdir -p src/main
     mv java src/main/
     }}}
  # You won't need these files/directories with maven-android-plugin, so remove them:
     {{{
     rm -r bin build.xml default.properties build.properties libs gen
     }}}
     _TODO: see what the {{{tests}}} folder contains and what we should recommend doing with it._
  # To build your apk, simply:
     {{{
     mvn install
     }}}
  # To deploy your apk to the connected device:
     {{{
     mvn com.jayway.maven.plugins.android.generation2:maven-android-plugin:deploy
     }}}

== Run instrumentation tests on device ==
  _Documentation is TODO, but do check out the apidemos-15-instrumentationtest in [Samples] for now._
  
  _Please feel free to update this page with more details / corrections!_


----
== More documentation ==

There is some documentation of plugin goals and parameters on the [http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html automatically generated maven site].


=== Optional: alias for commandline ===

Without any special settings, you can run standalone goals from the commandline like this:

  {{{
  mvn com.jayway.maven.plugins.android.generation2:maven-android-plugin:deploy -Dandroid.file=myApp.apk
  }}}

With an extra setting, you can do it as easy as this instead:

  {{{
  mvn android:deploy -Dandroid.file=myApp.apk
  }}}

The extra setting that you need, is in your {{{~/.m2/settings.xml}}} file. Create it if you don't already have it:

  {{{
  <settings xmlns="http://maven.apache.org/POM/4.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
      <pluginGroups>
          <pluginGroup>com.jayway.maven.plugins.android.generation2</pluginGroup>
      </pluginGroups>
  </settings>
  }}}