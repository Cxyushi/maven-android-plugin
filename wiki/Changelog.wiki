#summary Changes from version to version.
#labels Featured


= Changelog =

== Maven Android Plugin 2.x release series ==

=== Maven Android Plugin 2.7.0-SNAPSHOT (yet unreleased) ===

 * New feature: Native library copying support
    * Includes native libraries in the project's {{{libs/}}} directory. Can be changed with parameter {{{nativeLibrariesDirectory}}}.
    * Includes native libraries from Maven dependencies, if they are {{{<type>so</type>}}}.
    * Hardware architecture is picked up from the {{{so}}} artifact's classifier. If none is set, it defaults to {{{armebi}}}. (The default hw architecture when no classifier is set, can also be changed with parameter {{{nativeLibrariesDependenciesHardwareArchitectureDefault}}}.)
    * Thank you to Johan Lindquist.
 * Fix for Issue 87: zipalign should be skipped on non APK projects
    * Thank you to Clement Escoffier.
 * Fix: Do not get confused by trailing slashes.
    * Thank you to Mirko Friedenhagen.


=== Maven Android Plugin 2.6.0 ===

 * Split dex into unpack/dex so something like ProGuard can be inserted.
    * Thank you to Zang !MingJie for this patch.
 * Fixed Issue 72: Allows modification of the gen folder.
    * Thank you to Mathieu Carbou for this patch.
 * Obey the {{{-Dandroid.device=...}}} and {{{<device>...</device>}}} parameters for all adb commands.
    * By Hugo Josefson
 * Fixed Issue 68: Added boolean flag {{{coreLibrary}}} to !DexMojo to allow for passing the {{{--core-library}}} flag to dx.
  * Thank you to Kelsey Francis for the patch.
 * Fix for Issue 4: emulator cannot be stopped on windows because of command params not set correctly in the stop command, also makes sure to start the emulator when the device is connected to the usb, by passing the {{{-e}}} option to adb when getting the serial number.
   * Thank you to Chander Pechetty for this patch.
 * Dirty Fix for Issue 82.
    * Better that current situation! Thank you to Mirko Friedenhagen for this patch.
 * Paths on the device or emulator during Pull and Push may be Strings only instead of File as absolutePath is OS-dependant, e.g. on Windows Drive Letters will be added and Backslashes will be used as path separator.
    * Thank you to Mirko Friedenhagen for this patch.
 * Excluded old plexus:plexus-utils
    * Looks like maven-dependency-plugin indirectly depends on some really old version of plexus:plexus-utils, which had groupId different from current org.codehaus.plexus and thus was included together with the new version. The order of dependencies has changed in 3.0-beta-3, and the old/stale plexus-utils causes problems both during the build and at runtime.
    * Thank you to Igor Fedorenko for this patch.
 * Various cleanup and improvements.
    * Thank you to Mirko Friedenhagen and Manfred Moser for these.


=== Maven Android Plugin 2.5.2 ===

 * Fixed Issue 78: Platform folder names must be android-x, where x is a number.
   * Now, all subfolders of {{{<sdk-path>/platforms}}} with names starting with "{{{android-}}}" are valid platform folders. There is no implicit connection between the name of the directories and the platform versions. (The name of the platform version and the api level number are taken from the {{{source.properties}}} file.)
   * The plugin looks for platforms in {{{<sdk-path>/platforms}}}. Only directories starting with "{{{android-}}}" are considered valid. (Maybe we should remove this restriction.) It then looks in the file {{{source.properties}}} to find out the api level and the platform name. The level and name will then be matched to what is specified in the pom file.
   * Thank you to Albin Theander for the patch!

=== Maven Android Plugin 2.5.1 ===

 * Fixed Issue 74: Dependencies are now processed in the order they stand in the pom.
   * Thank you to Albin Theander for the patch!
 * Updated [http://maven-android-plugin-m2site.googlecode.com/svn/zipalign-mojo.html plugin documentation for zipalign].
 * Fixed misspelled command-line argument, corrected to {{{-Dandroid.zipalign.inputApk=...}}}
   * Thank you to Manfred Moser for the patch!

=== Maven Android Plugin 2.5.0 ===

 * New feature: Zipalign goal (Issue 51).
 * Improved verification of the Android SDK platform and API level.
 * Issue 4: Some more fixes for starting/stopping emulator on Windows.
 * Updated [Samples] to use android.jar from Maven Central, and not requiring Maven Android SDK Deployer.

  Thank you to Manfred Moser for these patches!

  ([http://www.simpligility.com/2010/06/maven-android-plugin-with-zipalign-and-improved-verification/ Manfred's blog post about this release] has more details)


=== Maven Android Plugin 2.4.0 ===

 * New feature: [http://maven-android-plugin-m2site.googlecode.com/svn/apk-mojo.html#configurations apk configurations]
 * Now possible to [http://maven-android-plugin-m2site.googlecode.com/svn/apk-mojo.html#generateApk skip generating dex and apk], by setting {{{<generateApk>false</generateApk>}}}.
   * Thank you to Albin Theander for the patches!

=== Maven Android Plugin 2.3.3 ===

 * Basic NDK support: include compiled native libraries to the apk
   * Thank you to Sergey Rudchenko for the patch!
 * Fixed Issue 57 / Issue 50: Dependencies do not get included in apk / maven dependency ksoap2-android reference error
   * This issue affected both EclipseIntegration and command-line builds with Maven 3.
   * Thank you to Ricardo Gladwell for the patch!
 * Google changed how platform directories are named. android-1.1 -> android-2; android-1.5 -> android-3, etc.:
   * Updated unit tests to pass for new version of Android SDK: convention for platforms directory structure has changed. Thank you to Ricardo Gladwell for the patch.
   * Updated pom.xml files in [Samples] to use the new platform directory names too.
   * *Users should edit their pom.xml files, and change the {{{<sdk><platform>}}} tags accordingly, if they install the new Android SDK.*

=== Maven Android Plugin 2.3.2 ===

 * Issue 4
   * New support for stopping an emulator on Windows.
     * *We still need someone on Windows to test it!*
     * See Issue 4, and scroll down to "INSTRUCTIONS FOR ANYONE TO TEST ON WINDOWS".
   * Improved support for starting an emulator on Mac in IntelliJ IDEA.
   * Thank you Manfred Moser for the patches!
 * Using newer plugins.

=== Maven Android Plugin 2.3.0 ===

 * Issue 4
   * New support for starting and stopping an emulator on Unix/Linux, and starting an emulator on Windows. Thank you Manfred Moser for this functionality! Documented in the [http://www.sonatype.com/books/mvnref-book/reference/android-dev-sect-goals.html Maven Android Plugin Goals] section of the book _Maven: The Complete Reference_.
 * Defaulting {{{<sdk><path>...</path></sdk>}}} to environment variable {{{ANDROID_HOME}}} so that the config parameter is not needed by default. Thank you Manfred Moser for the patch!
 * Require _at least_ Maven 2.2.1, instead of _exactly_ 2.2.1. This should fix an [http://groups.google.com/group/maven-android-developers/browse_thread/thread/eb48fddd36b0524 Eclipse issue discussed on the Maven Android Developers list].
 * Using newer plugins. Now {{{mvn versions:display-plugin-updates}}} is happy :)

=== Maven Android Plugin 2.2.2 ===

 * Increased configuration possibilities for ApkSourcesDependency. Thank you Albin Theander for the patch!
   * Added the possibility to use several overlay directories instead of just one. This makes it possible to config which ones to use with profiles. To use this feature, just add the following to the plugin configuration:
     * *{{{<resourceOverlayDirectories>}}}*
     * *{{{    <dir>res-overlay-1</dir>}}}*
     * *{{{    <dir>res-overlay-2</dir>}}}*
     * *{{{</resourceOverlayDirectories>}}}*
   * If the feature is not used, the old resourceOverlayDirectory parameter is used as before, keeping everything backwards compatible.

 * Issue 39
   * Improved detection for which projects are instrumentation test projects. Now considers projects without {{{<instrumentation.../>}}} tag in them, as non-instrumentationtest projects, and doesn't try to run them as tests.
 * Issue 41
   * Exclude any {{{<scope>provided</scope>}}} dependencies from the built apk file. The android.jar dependencies are/should be such dependencies.


=== Maven Android Plugin 2.2.1 ===

 * Bugfixes for features introduced in Maven Android Plugin 2.2.0. Thank you Erik Hjortsberg for your patches!
   * Combine both the local resources and any dependency resources in a combined directory.
   * Added the ability to provide overlay resources. These will need to be put in a directory named "res-overlay". See ApkSourcesDependency.
   * When using the eclipse maven plugin, the {{{apksources}}} artifact will point towards a directory (which isn't the correct one). Therefore, when extracting the {{{apksources}}} artifact we'll first try to get a jar from the local repository.
   * Fixed bug where the dependency files overwrote the local files (should be the other way around).
 * Require latest [http://maven.apache.org/download.html Apache Maven 2.2.1] (coincidental version number!) in fixing Issue 38.
 * Pom cleanup. Thank you Manfred Moser for the patch.

=== Maven Android Plugin 2.2.0 ===

 * Improved EclipseIntegration support. Thank you to Dietrich Schulten for the patch!
   * Eclipse should now better understand that {{{<packaging>apk</packaging>}}} projects are Java projects.
 * Improved EclipseIntegration support. Thank you to Erik Hjortsberg for the patch!
   * When using {{{<deleteConflictingFiles>true</deleteConflictingFiles>}}}, only delete those .aidl files which will result in a .java file being auto created.
 * New feature: Possible to set up inter-project dependencies, even for source code, Android resources and assets.
   * It lets you target different devices easier, without having to duplicate code.
   * Useful for when apk's for different devices need to share some code, Android resources and assets, while still having some code/resources/assets different.
   * See ApkSourcesDependency for details and instructions.
 * (Hopefully) Fixes Issue 31: android:dex should work with packaging=jar
   * Added config parameter {{{<attachJar>true|false</attachJar>}}} which is {{{true}}} by default. It can be disabled if the jar is not desired in the build. Alternatively configured from commandline: {{{-Dandroid.attachJar=false}}}
 * (Hopefully) Fixes Issue 30: Generated sources and duplicate attachment in a "mavenized" Eclipse project
   * No longer attaches the jar artifact twice. Attaching the jar can also be disabled 
 * Fixes Issue 28: !NoClassDefFoundError, but class exists in target/android-classes
   * Adding java classpath resources from project and dependencies to the apk file.
 * Fixes Issue 33: Dealing with META-INF in 3rd party jars
   * Adding java classpath resources from project and dependencies to the apk file.
 * Fixed and added more error messages.


=== Maven Android Plugin 2.1.0 ===
 * New feature, fixes Issue 27: RFE: Add posibility to specify the device to deploy to
   * Can be configured with configuration parameter {{{<device>emulator-5554</device>}}}
   * Can be configured from command line: {{{mvn -Dandroid.device=emulator-5554}}}
   * Special values {{{usb}}} and {{{emulator}}} can be used instead of serial number, for automatic device detection on USB cable or among started emulators.


=== Maven Android Plugin 2.0.0 ===
 * No changes needed since 2.0.0-rc1, just re-releasing as version 2.0.0.
 * The most stable, bug-free, easy-to-use release of any Maven plugin for Android app developers we know about!

----

== Maven Android Plugin 2.x pre-releases ==

Changes which require action are marked as *bold*.


=== Maven Android Plugin 2.0.0-rc1 ===
 * Closes input/output streams.
   * Thank you to Martin Vyšný for the patch.
   * This fixes [http://code.google.com/p/masa/issues/detail?id=27 Masa Issue 27], but in this project.

=== Maven Android Plugin 2.0.0-alpha9 ===
 * Issue 6: look over parameter names and expressions
   * [http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html mvn site] is updated with new goal names, and their config params.
   * Simplified goals {{{android:deploy}}} and {{{android:deploy-file}}} into the same goal, {{{android:deploy}}}.
   * Simplified goals {{{android:undeploy-file}}} and {{{android:undeploy-package}}} into the same goal, {{{android:undeploy}}}.
   * In goals {{{android:deploy}}} and {{{android:undeploy}}}:
     * Renamed command-line parameter {{{-Dfile}}} to {{{-Dandroid.file}}}, for consistency.
   * In goals {{{android:pull}}} and {{{android:push}}}:
     * Renamed command-line parameter {{{-Dsource}}} to {{{-Dandroid.source}}}, for consistency.
     * Renamed command-line parameter {{{-Ddestination}}} to {{{-Dandroid.destination}}}, for consistency.
   * *Renamed config param {{{<signWithDebugKeystore>true|false</signWithDebugKeystore>}}} to*
     * *{{{<sign>}}}*
     * *{{{    <debug>true|false|auto</debug>}}}*
     * *{{{</sign>}}}*
   * Removed config param {{{<sourceDirectory>}}} for clarity, because it should be configured outside the plugin, like this:
     * {{{<build>}}}
     * {{{    <sourceDirectory>src/main/java</sourceDirectory>}}}
     * {{{</build>}}}

=== Maven Android Plugin 2.0.0-alpha8 ===
 * Issue 6: look over parameter names and expressions
   * [http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html mvn site] is updated with new goal names, and their config params.
   * [Glossary] is updated.
   * Renamed goal {{{android:deployDependencies}}} to {{{android:deploy-dependencies}}}.
     * *Renamed config param {{{<undeployApkBeforeDeploying>}}} to {{{<undeployBeforeDeploy>}}}.*
   * Renamed goal {{{android:adbPull}}} to {{{android:pull}}}.
     * Renamed config param {{{<destinationFileOrDirectory>}}} to {{{<destination>}}}.
     * Renamed config param {{{<sourceFileOrDirectory>}}} to {{{<source>}}}.
     * Improved error handling.
   * Renamed goal {{{android:adbPush}}} to {{{android:push}}}.
     * Renamed config param {{{<destinationFileOrDirectory>}}} to {{{<destination>}}}.
     * Renamed config param {{{<sourceFileOrDirectory>}}} to {{{<source>}}}.
     * Improved error handling.
   * Renamed goal {{{android:undeploy-packageName}}} to {{{android:undeploy-package}}}.
     * Renamed config param {{{<packageName>}}} to {{{<package>}}}.
     * Renamed config param {{{-Dpackage}}} to {{{-Dandroid.package}}}.
     * Resolve config param {{{<package>}}}/{{{-Dandroid.package}}} from {{{AndroidManifest.xml}}} if not defined.
   * Renamed goal {{{android:platformTest}}} to {{{android:instrument}}}.
     * Renamed config param {{{<testsPackage>}}} to {{{<testPackage>}}}.
     * Renamed config param {{{<testPackage>}}} to {{{<instrumentationPackage>}}}.
     * Renamed config param {{{<testRunner>}}} to {{{<instrumentationRunner>}}}.
     * Renamed config param {{{-Dandroid.test.testPackage}}} to {{{-Dandroid.instrumentationPackage}}}.
     * Renamed config param {{{-Dandroid.test.testRunner}}} to {{{-Dandroid.instrumentationRunner}}}.
   * In goal {{{android:generate-sources}}}:
     * Removed parameter {{{createPackageDirectories}}} for clarity, and because we currently have no known use case for setting it to {{{false}}}.
   * Samples: Renamed apidemos-`*`-platformtests to apidemos-`*`-instrumentationtest.



=== Maven Android Plugin 2.0.0-alpha7 ===
 * Issue 25: {{{mvn android:deploy}}} doesn't work
   * Now it does :)

=== Maven Android Plugin 2.0.0-alpha6 ===
 * Issue 24: mvn install fails on Windows for {{{<packaging>android:apk:platformTest</packaging>}}}
   * MAJOR CHANGE: Solving this had to result in a major change in how poms are defined. It really was necessary for fixing this issue. Can't be done without changing the {{{<packaging>}}} to something without ":", so it's best to do it all at once now while we're still in alpha.
   * The change is that all Android application poms and all Android platformTest poms will have to have *{{{<packaging>apk</packaging>}}}* instead of the separate {{{<packaging>android:apk</packaging>}}} and {{{<packaging>android:apk:platformTest</packaging>}}} which they've had before. Also, of course, if the platformTest pom has a dependency to another apk, that {{{<dependency>}}} will now have to be *{{{<type>apk</type>}}}* instead of {{{<type>android:apk</type>}}}.
   * {{{<packaging>apk</packaging>}}} also makes more sense, especially when comparing to other packaging types such as jar, war and so on...
 * Updated [Samples] to reflect the fixed Issue 24.
 * Because both application and platformTest poms have the same {{{<packaging>}}} now, Maven Android Plugin autodetects whether to enable integration test goals when going through the {{{integration-test}}} phase. The autodetection is based on whether it finds any test classes (those which extend {{{junit.framework.*}}} or {{{android.test.*}}}) in your application. It looks in both the project's source directory and any jar dependencies brought in, which will be included in the apk.
 * Test class autodetection can be overridden with the config parameter {{{<enableIntegrationTest>true|false|auto</enableIntegrationTest>}}}.


=== Maven Android Plugin 2.0.0-alpha5 ===
 * Issue 23: !PlatformTestMojo requires PATH
   * Doesn't expect PATH to be set. Uses tools in the configured sdk instead. (fixed in one more place)

=== Maven Android Plugin 2.0.0-alpha4 ===
 * Issue 21: Run standalone goals (without pom)
   * It is now possible to run standalone goals (such as {{{android:undeploy-file}}}) directly from commandline, without having a pom with the required config parameter {{{<sdk><path>...}}} in it. It can instead be set on commandline with the {{{-Dandroid.sdk.path}}} parameter.
 * Improved error messages for missing sdk path: added suggestions for configuration options.
 * Issue 19: Created DeploymentInstructions wiki page
 * Issue 16: Add site, source:jar, javadoc:jar to release configuration	

=== Maven Android Plugin 2.0.0-alpha3 ===
 * Issue 1: Support for Android SDK 1.5!
   * Thank you to Andreas Ronge for the initial patch.
 * No longer requires any magic environment variables!
   * *Instead, a mandatory configuration parameter was added:*
   {{{
   <artifactId>maven-android-plugin</artifactId>
   <version>2.0.0-alpha3</version>
   <configuration>
       <sdk>
           <path>/opt/android-sdk-linux_x86-1.5_r2</path>
       </sdk>
   </configuration>
   }}}
   * If you want, you can set it using an environment variable, as done in the [Samples], for example {{{${env.MY_ANDROID_SDK_LOCATION}}}}. Then you will have to set that environment variable to the location where you installed Android SDK 1.5r2.
   * You also have the option of setting it in a parent pom instead, with {{{<pluginManagement>}}}. Then you can skip including the {{{<sdk><path>}}} in your project pom altogether!
   * This also means you can use different specific Android SDK's for different projects.
   * This change was made to make the plugin feel like less magic. Now you know that any environment variables you set, are only for yourself. The plugin doesn't read them; it only reads its configuration parameters.
   * This fixes [http://code.google.com/p/masa/issues/detail?id=26 Masa Issue 26], but in this project.
 * Duplicated the sample {{{apidemos}}} application into {{{apidemos-11}}} with code from the Android SDK 1.1, and {{{apidemos-15}}} with code from the Android SDK 1.5. They use, and will work with, their corresponding Android SDK. Use {{{apidemos-15}}} for Android SDK 1.5r2.
 * More and updated documentation, both wiki and in code.
 * More tests in code.

=== Maven Android Plugin 2.0.0-alpha2 ===
 * Doesn't expect PATH to be set too. Uses ANDROID_SDK/tools instead. (fixed in one more place)
 * Split out samples to a separate git repo.

=== Maven Android Plugin 2.0.0-alpha1 ===

First release of the new implementation of Maven Android Plugin.

Implemented all changes listed in [http://groups.google.com/group/masa-developers/browse_thread/thread/732fb629ec917cd4 this email with suggestions sent to the Masa Developers list], except number 11 (done as of 2.0.0-alpha3) and number 12 (ongoing as Issue 6 here, please give feedback on that).

Some of the details implemented:
 * Collected all plugins into one, for clarity and maintainability.
 * Refactored *a lot* of code for maintainability and clarity.
 * Separate the act of deploying an apk into a goal of its own ({{{mvn android:deploy}}}). This fixes [http://code.google.com/p/masa/issues/detail?id=20 Masa Issue 20], but in this project.
 * When running the {{{integration-test}}} phase for a {{{<packaging>android:apk:platformTest</packaging>}}} pom, automatically deploy the platform test apk, as well as the apk to test, onto the device before. This fixes [http://code.google.com/p/masa/issues/detail?id=21 Masa Issue 21], but in this project.
 * Optionally undeploy each apk from the device before deploying it. This helps the issue where different developers with different debug keys use the same device and try to install an apk with the same package id. They would collide if the first one is not undeployed before the other is deployed on top of it.
 * Make as much as possible automatically configured, if possible. For example reading the package id from inside an apk file or !AndroidManifest.xml (whichever is available), instead of the user having to define it when for example undeploying an apk.
 * Added a sample Maven application (!ApiDemos) as an example of using Maven Android Plugin, and as a test for the plugin. This fixes [http://code.google.com/p/masa/issues/detail?id=11 Masa Issue 11], but in this project.
 * Improved documentation.
 * Added unit testing.
 * Added error messages.
 * Updated dependencies' versions.
 * Removed the PAR plugin. It can be added again if requested.
 * Fine-tuned phases and made lifecycle more like the default lifecycle for {{{<packaging>jar</packaging>}}}. This fixes [http://code.google.com/p/masa/issues/detail?id=14 Masa Issue 14], but in this project.
 * Renamed many things to names which say what they do.
 * Renamed {{{install}}} to {{{deploy}}}, because that's what it's usually called in Maven-world, and because {{{install}}} has a very specific (other) meaning.
 * Also delete {{{Manifest.java}}} when deleting {{{R.java}}}.
 * Added goals {{{deploy-file}}} and {{{undeploy-file}}} for (un)deploying any separate apk outside of any project.
 * Added goal {{{undeploy-packageName}}} for undeploying an apk from device, if you already know the package name.
 * Config parameter platformtestrunner class can be inferred from {{{AndroidManifest.xml: /manifest//instrumentation/@android:name}}}.
 * Standalone goals should not require a project.
 * Doesn't expect PATH to be set too. Uses ANDROID_SDK/tools instead.
 * Set up release management procedures to enable frequent releases.
 * Started preparing for syncing to Maven Central, so we won't need to specify {{{<pluginRepository>}}} in the pom.xml when it's set up.


----
    ==== _About the Maven Android Plugin versions history_ ====

    _Maven Android Plugin was originally based on the Masa plugins 1.0.0. Thank you to Shane Isbell for creating Masa ([http://code.google.com/p/masa http://code.google.com/p/masa])! Maven Android Plugin 1.x was a direct clone of Masa's trunk. It was meant as an easy way for any current user of Masa 1.0.0 to get access to the latest unreleased bug fixes in Masa's trunk.

    Maven Android Plugin 2.x has since been reworked and greatly improved in terms of bugfixing, features and ease-of-use, compared to version 1.

    <b>Versions 2.x are recommended for all users.</b>_

----

== Maven Android Plugin 1.x release series ==

=== Maven Android Plugin 1.0.2 ===
Released by this project (Maven Android Plugin), based on [http://code.google.com/p/masa/source/list Masa svn revision 63], which includes fixes for the following:

 * ~~[http://code.google.com/p/masa/issues/detail?id=4 Masa Issue 4]~~: Not possible to set finalName
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 15]~~: !NullPointerException when localRepository not set
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 16]~~: IntelliJ IDEA does not pick up generated-sources
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 17]~~: apk file not attached properly to build
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 18]~~: assets not included                                          
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 19]~~: Not possible to specify jvm parameters to dx


----

== Masa plugins 1.0.0 ==
Released by the Masa project, based on [http://code.google.com/p/masa/source/list Masa svn revision 56].