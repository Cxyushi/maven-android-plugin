#summary Changes from version to version.
#labels Featured


----
    ==== _About the Maven Android Plugin versions_ ====

    _Maven Android Plugin was based on the Masa plugins 1.0.0. Thank you to Shane Isbell for creating Masa! (http://code.google.com/p/masa) 

    Maven Android Plugin 1.x is a direct clone of Masa's trunk. It is meant as an easy way for any current user of Masa 1.0.0 to get access to the latest bug fixes in Masa's trunk.

    Maven Android Plugin 2.x has been improved in terms of features, usability and bugfixing, compared to version 1. It is recommended for all new users._

----
= Changelog =
<sup>(start reading at the bottom)</sup>

== Maven Android Plugin 2.0.0-rc1 ==
 * Closes input/output streams.
   * Thank you to Martin Vyšný for the patch.
   * This fixes [http://code.google.com/p/masa/issues/detail?id=27 Masa Issue 27], but in this project.

== Maven Android Plugin 2.0.0-alpha9 ==
 * Issue 6: look over parameter names and expressions
   * [http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html mvn site] is updated with new goal names, and their config params.
   * Simplified goals {{{android:deploy}}} and {{{android:deploy-file}}} into the same goal, {{{android:deploy}}}.
   * Simplified goals {{{android:undeploy-file}}} and {{{android:undeploy-package}}} into the same goal, {{{android:undeploy}}}.
   * In goals {{{android:deploy}}} and {{{android:undeploy}}}:
     * Renamed command-line parameter {{{-Dfile}}} to {{{-Dandroid.file}}}, for consistency.
   * In goals {{{android:pull}}} and {{{android:push}}}:
     * Renamed command-line parameter {{{-Dsource}}} to {{{-Dandroid.source}}}, for consistency.
     * Renamed command-line parameter {{{-Ddestination}}} to {{{-Dandroid.destination}}}, for consistency.
   * *Renamed config param {{{<signWithDebugKeystore>true|false</signWithDebugKeystore>}}} to*
     * *{{{<sign>}}}*
     * *{{{    <debug>true|false|auto</debug>}}}*
     * *{{{</sign>}}}*
   * Removed config param {{{<sourceDirectory>}}} for clarity, because it should be configured outside the plugin, like this:
     * {{{<build>}}}
     * {{{    <sourceDirectory>src/main/java</sourceDirectory>}}}
     * {{{</build>}}}

== Maven Android Plugin 2.0.0-alpha8 ==
 * Issue 6: look over parameter names and expressions
   * [http://maven-android-plugin-m2site.googlecode.com/svn/plugin-info.html mvn site] is updated with new goal names, and their config params.
   * [Glossary] is updated.
   * Renamed goal {{{android:deployDependencies}}} to {{{android:deploy-dependencies}}}.
     * *Renamed config param {{{<undeployApkBeforeDeploying>}}} to {{{<undeployBeforeDeploy>}}}.*
   * Renamed goal {{{android:adbPull}}} to {{{android:pull}}}.
     * Renamed config param {{{<destinationFileOrDirectory>}}} to {{{<destination>}}}.
     * Renamed config param {{{<sourceFileOrDirectory>}}} to {{{<source>}}}.
     * Improved error handling.
   * Renamed goal {{{android:adbPush}}} to {{{android:push}}}.
     * Renamed config param {{{<destinationFileOrDirectory>}}} to {{{<destination>}}}.
     * Renamed config param {{{<sourceFileOrDirectory>}}} to {{{<source>}}}.
     * Improved error handling.
   * Renamed goal {{{android:undeploy-packageName}}} to {{{android:undeploy-package}}}.
     * Renamed config param {{{<packageName>}}} to {{{<package>}}}.
     * Renamed config param {{{-Dpackage}}} to {{{-Dandroid.package}}}.
     * Resolve config param {{{<package>}}}/{{{-Dandroid.package}}} from {{{AndroidManifest.xml}}} if not defined.
   * Renamed goal {{{android:platformTest}}} to {{{android:instrument}}}.
     * Renamed config param {{{<testsPackage>}}} to {{{<testPackage>}}}.
     * Renamed config param {{{<testPackage>}}} to {{{<instrumentationPackage>}}}.
     * Renamed config param {{{<testRunner>}}} to {{{<instrumentationRunner>}}}.
     * Renamed config param {{{-Dandroid.test.testPackage}}} to {{{-Dandroid.instrumentationPackage}}}.
     * Renamed config param {{{-Dandroid.test.testRunner}}} to {{{-Dandroid.instrumentationRunner}}}.
   * In goal {{{android:generate-sources}}}:
     * Removed parameter {{{createPackageDirectories}}} for clarity, and because we currently have no known use case for setting it to {{{false}}}.
   * Samples: Renamed apidemos-`*`-platformtests to apidemos-`*`-instrumentationtest.



== Maven Android Plugin 2.0.0-alpha7 ==
 * Issue 25: {{{mvn android:deploy}}} doesn't work
   * Now it does :)

== Maven Android Plugin 2.0.0-alpha6 ==
 * Issue 24: mvn install fails on Windows for {{{<packaging>android:apk:platformTest</packaging>}}}
   * MAJOR CHANGE: Solving this had to result in a major change in how poms are defined. It really was necessary for fixing this issue. Can't be done without changing the {{{<packaging>}}} to something without ":", so it's best to do it all at once now while we're still in alpha.
   * The change is that all Android application poms and all Android platformTest poms will have to have {{{<packaging>apk</packaging>}}} instead of the separate {{{<packaging>android:apk</packaging>}}} and {{{<packaging>android:apk:platformTest</packaging>}}} which they've had before. Also, of course, if the platformTest pom has a dependency to another apk, that {{{<dependency>}}} will now have to be {{{<type>apk</type>}}} instead of {{{<type>android:apk</type>}}}.
   * {{{<packaging>apk</packaging>}}} also makes more sense, especially when comparing to other packaging types such as jar, war and so on...
 * Updated [Samples] to reflect the fixed Issue 24.
 * Because both application and platformTest poms have the same {{{<packaging>}}} now, Maven Android Plugin autodetects whether to enable integration test goals when going through the {{{integration-test}}} phase. The autodetection is based on whether it finds any test classes (those which extend {{{junit.framework.*}}} or {{{android.test.*}}}) in your application. It looks in both the project's source directory and any jar dependencies brought in, which will be included in the apk.
 * Test class autodetection can be overridden with the config parameter {{{<enableIntegrationTest>true|false|auto</enableIntegrationTest>}}}.


== Maven Android Plugin 2.0.0-alpha5 ==
 * Issue 23: !PlatformTestMojo requires PATH
   * Doesn't expect PATH to be set. Uses tools in the configured sdk instead. (fixed in one more place)

== Maven Android Plugin 2.0.0-alpha4 ==
 * Issue 21: Run standalone goals (without pom)
   * It is now possible to run standalone goals (such as {{{android:undeploy-file}}}) directly from commandline, without having a pom with the required config parameter {{{<sdk><path>...}}} in it. It can instead be set on commandline with the {{{-Dandroid.sdk.path}}} parameter.
 * Improved error messages for missing sdk path: added suggestions for configuration options.
 * Issue 19: Created DeploymentInstructions wiki page
 * Issue 16: Add site, source:jar, javadoc:jar to release configuration	

== Maven Android Plugin 2.0.0-alpha3 ==
 * Issue 1: Support for Android SDK 1.5!
   * Thank you to Andreas Ronge for the initial patch.
 * No longer requires any magic environment variables!
   * Instead, a mandatory configuration parameter was added:
   {{{
   <artifactId>maven-android-plugin</artifactId>
   <version>2.0.0-alpha3</version>
   <configuration>
       <sdk>
           <path>/opt/android-sdk-linux_x86-1.5_r2</path>
       </sdk>
   </configuration>
   }}}
   * If you want, you can set it using an environment variable, as done in the [Samples], for example {{{${env.MY_ANDROID_SDK_LOCATION}}}}. Then you will have to set that environment variable to the location where you installed Android SDK 1.5r2.
   * You also have the option of setting it in a parent pom instead, with {{{<pluginManagement>}}}. Then you can skip including the {{{<sdk><path>}}} in your project pom altogether!
   * This also means you can use different specific Android SDK's for different projects.
   * This change was made to make the plugin feel like less magic. Now you know that any environment variables you set, are only for yourself. The plugin doesn't read them; it only reads its configuration parameters.
   * This fixes [http://code.google.com/p/masa/issues/detail?id=26 Masa Issue 26], but in this project.
 * Duplicated the sample {{{apidemos}}} application into {{{apidemos-11}}} with code from the Android SDK 1.1, and {{{apidemos-15}}} with code from the Android SDK 1.5. They use, and will work with, their corresponding Android SDK. Use {{{apidemos-15}}} for Android SDK 1.5r2.
 * More and updated documentation, both wiki and in code.
 * More tests in code.

== Maven Android Plugin 2.0.0-alpha2 ==
 * Doesn't expect PATH to be set too. Uses ANDROID_SDK/tools instead. (fixed in one more place)
 * Split out samples to a separate git repo.

== Maven Android Plugin 2.0.0-alpha1 ==

First release of the new implementation of Maven Android Plugin.

Implemented all changes listed in [http://groups.google.com/group/masa-developers/browse_thread/thread/732fb629ec917cd4 this email with suggestions sent to the Masa Developers list], except number 11 (done as of 2.0.0-alpha3) and number 12 (ongoing as Issue 6 here, please give feedback on that).

Some of the details implemented:
 * Collected all plugins into one, for clarity and maintainability.
 * Refactored *a lot* of code for maintainability and clarity.
 * Separate the act of deploying an apk into a goal of its own ({{{mvn android:deploy}}}). This fixes [http://code.google.com/p/masa/issues/detail?id=20 Masa Issue 20], but in this project.
 * When running the {{{integration-test}}} phase for a {{{<packaging>android:apk:platformTest</packaging>}}} pom, automatically deploy the platform test apk, as well as the apk to test, onto the device before. This fixes [http://code.google.com/p/masa/issues/detail?id=21 Masa Issue 21], but in this project.
 * Optionally undeploy each apk from the device before deploying it. This helps the issue where different developers with different debug keys use the same device and try to install an apk with the same package id. They would collide if the first one is not undeployed before the other is deployed on top of it.
 * Make as much as possible automatically configured, if possible. For example reading the package id from inside an apk file or !AndroidManifest.xml (whichever is available), instead of the user having to define it when for example undeploying an apk.
 * Added a sample Maven application (!ApiDemos) as an example of using Maven Android Plugin, and as a test for the plugin. This fixes [http://code.google.com/p/masa/issues/detail?id=11 Masa Issue 11], but in this project.
 * Improved documentation.
 * Added unit testing.
 * Added error messages.
 * Updated dependencies' versions.
 * Removed the PAR plugin. It can be added again if requested.
 * Fine-tuned phases and made lifecycle more like the default lifecycle for {{{<packaging>jar</packaging>}}}. This fixes [http://code.google.com/p/masa/issues/detail?id=14 Masa Issue 14], but in this project.
 * Renamed many things to names which say what they do.
 * Renamed {{{install}}} to {{{deploy}}}, because that's what it's usually called in Maven-world, and because {{{install}}} has a very specific (other) meaning.
 * Also delete {{{Manifest.java}}} when deleting {{{R.java}}}.
 * Added goals {{{deploy-file}}} and {{{undeploy-file}}} for (un)deploying any separate apk outside of any project.
 * Added goal {{{undeploy-packageName}}} for undeploying an apk from device, if you already know the package name.
 * Config parameter platformtestrunner class can be inferred from {{{AndroidManifest.xml: /manifest//instrumentation/@android:name}}}.
 * Standalone goals should not require a project.
 * Doesn't expect PATH to be set too. Uses ANDROID_SDK/tools instead.
 * Set up release management procedures to enable frequent releases.
 * Started preparing for syncing to Maven Central, so we won't need to specify {{{<pluginRepository>}}} in the pom.xml when it's set up.

== Maven Android Plugin 1.0.2 ==
Released by this project (Maven Android Plugin), based on [http://code.google.com/p/masa/source/list Masa svn revision 63], which includes fixes for the following:

 * ~~[http://code.google.com/p/masa/issues/detail?id=4 Masa Issue 4]~~: Not possible to set finalName
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 15]~~: !NullPointerException when localRepository not set
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 16]~~: IntelliJ IDEA does not pick up generated-sources
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 17]~~: apk file not attached properly to build
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 18]~~: assets not included                                          
 * ~~[http://code.google.com/p/masa/issues/detail?id=15 Masa Issue 19]~~: Not possible to specify jvm parameters to dx

== Masa plugins 1.0.0 ==
Released by the Masa project, based on [http://code.google.com/p/masa/source/list Masa svn revision 56].